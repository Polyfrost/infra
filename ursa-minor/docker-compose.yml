version: "3"
services:
  hytils:
    container_name: hytils-ursa-minor
    pull_policy: never
    image: ursa-minor:latest
    build:
      dockerfile: Dockerfile
      context: repo
    restart: unless-stopped
    volumes:
      - ./rules/hytils:/etc/ursa-minor/rules
    networks:
      external:
        ipv4_address: 172.16.1.7
    env_file: .env
    environment:
      URSA_HYPIXEL_TOKEN: "${HYTILS_TOKEN}"
      URSA_RULES: "${HYTILS_RULES}"
    depends_on:
      redis:
        condition: service_healthy
  dsm:
    container_name: dsm-ursa-minor
    pull_policy: never
    image: ursa-minor:latest
    restart: unless-stopped
    volumes:
      - ./rules/dsm:/etc/ursa-minor/rules
    networks:
      external:
        ipv4_address: 172.16.1.9
    env_file: .env
    environment:
      URSA_HYPIXEL_TOKEN: "${DSM_TOKEN}"
      URSA_RULES: "${DSM_RULES}"
    depends_on:
      redis:
        condition: service_healthy
  pss:
    container_name: pss-ursa-minor
    pull_policy: never
    image: ursa-minor:latest
    restart: unless-stopped
    volumes:
      - ./rules/pss:/etc/ursa-minor/rules
    networks:
      external:
        ipv4_address: 172.16.1.10
    env_file: .env
    environment:
      URSA_HYPIXEL_TOKEN: "${PSS_TOKEN}"
      URSA_RULES: "${PSS_RULES}"
    depends_on:
      redis:
        condition: service_healthy
  redis:
    container_name: ursa-minor-redis
    image: redis:7.0.11
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
    networks:
      external:
        ipv4_address: 172.16.1.8

networks:
  external:
    external: true
    name: external
