# Constants
PRIVATE_IP_HASH = encode_base64(slice!(decode_base16!(sha3("172.25.0.1")), start: 0, end: 6))

# Ensure the processing actually happened
assert!(exists(._vector), "extra _vector field should be added")

# Validate redacted paths
client_ip = string!(.request.client_ip)
assert!(
    !is_ipv4(client_ip) && !is_ipv6(client_ip),
    ".request.client_ip field should be redacted"
)

# Validate user agent processing
log(._vector.user_agent)
assert!(._vector.user_agent.browser != null, "User agent should parse browser")
assert!(._vector.user_agent.os != null, "User agent should parse os")
assert!(._vector.user_agent.device != null, "User agent should parse device")

# Validate geoip processing
if .request.client_ip == PRIVATE_IP_HASH {
    assert_eq!(._vector.geoip, null, "geoip data should be null on private IP lookup")
} else {
    assert_eq!(._vector.geoip.city_name, "Denver", "geoip data should be correct on real IP lookup")
}
